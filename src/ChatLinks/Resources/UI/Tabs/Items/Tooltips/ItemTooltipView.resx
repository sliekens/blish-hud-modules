<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Recipes unlocked" xml:space="preserve">
    <value>You already know {0} of {1} recipes taught by this item.</value>
  </data>
  <data name="Recipe unlocked" xml:space="preserve">
    <value>You already know this recipe!</value>
  </data>
  <data name="All recipes unlocked" xml:space="preserve">
    <value>You already know all of these recipes!</value>
  </data>
  <data name="Grant unlocks permission" xml:space="preserve">
    <value>To see the unlock status, register an API key with "Account" and "Unlocks" permissions.</value>
  </data>
  <data name="Grant unlocks and inventories permission" xml:space="preserve">
    <value>To see the unlock status, register an API key with "Account", "Unlocks" and "Inventories" permissions.</value>
  </data>
  <data name="Foot Armor" xml:space="preserve">
    <value>Foot Armor</value>
  </data>
  <data name="Chest Armor" xml:space="preserve">
    <value>Chest Armor</value>
  </data>
  <data name="Hand Armor" xml:space="preserve">
    <value>Hand Armor</value>
  </data>
  <data name="Head Armor" xml:space="preserve">
    <value>Head Armor</value>
  </data>
  <data name="Leg Armor" xml:space="preserve">
    <value>Leg Armor</value>
  </data>
  <data name="Shoulder Armor" xml:space="preserve">
    <value>Shoulder Armor</value>
  </data>
  <data name="Back Item" xml:space="preserve">
    <value>Back Item</value>
  </data>
  <data name="Takes effect immediately upon receipt" xml:space="preserve">
    <value>Takes effect immediately upon receipt.</value>
  </data>
  <data name="Double-click to consume" xml:space="preserve">
    <value>Double-click to consume.</value>
  </data>
  <data name="Service" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="Consumable" xml:space="preserve">
    <value>Consumable</value>
  </data>
  <data name="Excessive alcohol consumption will result in intoxication" xml:space="preserve">
    <value>Excessive alcohol consumption will result in intoxication.</value>
  </data>
  <data name="You already have that content unlocked" xml:space="preserve">
    <value>You already have that content unlocked.</value>
  </data>
  <data name="Unlock status unknown" xml:space="preserve">
    <value>Unlock status unknown.</value>
  </data>
  <data name="You have already unlocked this outfit" xml:space="preserve">
    <value>You have already unlocked this outfit!</value>
  </data>
  <data name="Accessory" xml:space="preserve">
    <value>Accessory</value>
  </data>
  <data name="Amulet" xml:space="preserve">
    <value>Amulet</value>
  </data>
  <data name="Ring" xml:space="preserve">
    <value>Ring</value>
  </data>
  <data name="Novelty Unlocked" xml:space="preserve">
    <value>Novelty Unlocked</value>
  </data>
  <data name="Novelty Locked" xml:space="preserve">
    <value>Novelty Locked</value>
  </data>
  <data name="Module" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="Required Mastery: Jade Bots" xml:space="preserve">
    <value>Required Mastery: Jade Bots</value>
  </data>
  <data name="Mini" xml:space="preserve">
    <value>Mini</value>
  </data>
  <data name="Power Core" xml:space="preserve">
    <value>Power Core</value>
  </data>
  <data name="Relic" xml:space="preserve">
    <value>Relic</value>
  </data>
  <data name="Trophy" xml:space="preserve">
    <value>Trophy</value>
  </data>
  <data name="Axe" xml:space="preserve">
    <value>Axe</value>
  </data>
  <data name="Dagger" xml:space="preserve">
    <value>Dagger</value>
  </data>
  <data name="Focus" xml:space="preserve">
    <value>Focus</value>
  </data>
  <data name="Greatsword" xml:space="preserve">
    <value>Greatsword</value>
  </data>
  <data name="Hammer" xml:space="preserve">
    <value>Hammer</value>
  </data>
  <data name="Harpoon Gun" xml:space="preserve">
    <value>Harpoon Gun</value>
  </data>
  <data name="Large Bundle" xml:space="preserve">
    <value>Large Bundle</value>
  </data>
  <data name="Longbow" xml:space="preserve">
    <value>Longbow</value>
  </data>
  <data name="Mace" xml:space="preserve">
    <value>Mace</value>
  </data>
  <data name="Pistol" xml:space="preserve">
    <value>Pistol</value>
  </data>
  <data name="Rifle" xml:space="preserve">
    <value>Rifle</value>
  </data>
  <data name="Scepter" xml:space="preserve">
    <value>Scepter</value>
  </data>
  <data name="Shield" xml:space="preserve">
    <value>Shield</value>
  </data>
  <data name="Shortbow" xml:space="preserve">
    <value>Shortbow</value>
  </data>
  <data name="Small Bundle" xml:space="preserve">
    <value>Small Bundle</value>
  </data>
  <data name="Spear" xml:space="preserve">
    <value>Spear</value>
  </data>
  <data name="Staff" xml:space="preserve">
    <value>Staff</value>
  </data>
  <data name="Sword" xml:space="preserve">
    <value>Sword</value>
  </data>
  <data name="Torch" xml:space="preserve">
    <value>Torch</value>
  </data>
  <data name="Toy" xml:space="preserve">
    <value>Toy</value>
  </data>
  <data name="Trident" xml:space="preserve">
    <value>Trident</value>
  </data>
  <data name="Warhorn" xml:space="preserve">
    <value>Warhorn</value>
  </data>
  <data name="Defense" xml:space="preserve">
    <value>Defense: {0:N0}</value>
  </data>
  <data name="Power" xml:space="preserve">
    <value>+{0:N0} Power</value>
  </data>
  <data name="Precision" xml:space="preserve">
    <value>+{0:N0} Precision</value>
  </data>
  <data name="Toughness" xml:space="preserve">
    <value>+{0:N0} Toughness</value>
  </data>
  <data name="Vitality" xml:space="preserve">
    <value>+{0:N0} Vitality</value>
  </data>
  <data name="Concentration" xml:space="preserve">
    <value>+{0:N0} Concentration</value>
  </data>
  <data name="ConditionDamage" xml:space="preserve">
    <value>+{0:N0} Condition Damage</value>
  </data>
  <data name="Expertise" xml:space="preserve">
    <value>+{0:N0} Expertise</value>
  </data>
  <data name="Ferocity" xml:space="preserve">
    <value>+{0:N0} Ferocity</value>
  </data>
  <data name="HealingPower" xml:space="preserve">
    <value>+{0:N0} Healing Power</value>
  </data>
  <data name="AgonyResistance" xml:space="preserve">
    <value>+{0:N0} Agony Resistance</value>
  </data>
  <data name="Unused infusion slot" xml:space="preserve">
    <value>Unused Infusion Slot</value>
  </data>
  <data name="Unused enrichment slot" xml:space="preserve">
    <value>Unused Enrichment Slot</value>
  </data>
  <data name="Unused upgrade slot" xml:space="preserve">
    <value>Unused Upgrade Slot</value>
  </data>
  <data name="Skin Unlocked" xml:space="preserve">
    <value>Skin Unlocked</value>
  </data>
  <data name="Skin Locked" xml:space="preserve">
    <value>Skin Locked</value>
  </data>
  <data name="Junk" xml:space="preserve">
    <value>Junk</value>
  </data>
  <data name="Basic" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="Fine" xml:space="preserve">
    <value>Fine</value>
  </data>
  <data name="Masterwork" xml:space="preserve">
    <value>Masterwork</value>
  </data>
  <data name="Rare" xml:space="preserve">
    <value>Rare</value>
  </data>
  <data name="Exotic" xml:space="preserve">
    <value>Exotic</value>
  </data>
  <data name="Ascended" xml:space="preserve">
    <value>Ascended</value>
  </data>
  <data name="Legendary" xml:space="preserve">
    <value>Legendary</value>
  </data>
  <data name="Required Level" xml:space="preserve">
    <value>Required Level: {0}</value>
  </data>
  <data name="Account Bound on Acquire" xml:space="preserve">
    <value>Account Bound on Acquire</value>
  </data>
  <data name="Account Bound on Use" xml:space="preserve">
    <value>Account Bound on Use</value>
  </data>
  <data name="Soulbound on Acquire" xml:space="preserve">
    <value>Soulbound on Acquire</value>
  </data>
  <data name="Soulbound on Use" xml:space="preserve">
    <value>Soulbound on Use</value>
  </data>
  <data name="Weapon Strength" xml:space="preserve">
    <value>Weapon Strength: {0:N0} - {1:N0}</value>
  </data>
  <data name="Choking" xml:space="preserve">
    <value>Choking</value>
  </data>
  <data name="Fire" xml:space="preserve">
    <value>Fire</value>
  </data>
  <data name="Ice" xml:space="preserve">
    <value>Ice</value>
  </data>
  <data name="Lightning" xml:space="preserve">
    <value>Lightning</value>
  </data>
  <data name="Double-click to select stats" xml:space="preserve">
    <value>Double-click to select stats.</value>
  </data>
  <data name="Unique" xml:space="preserve">
    <value>Unique</value>
  </data>
  <data name="Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="Mini Locked" xml:space="preserve">
    <value>Mini Locked</value>
  </data>
  <data name="Mini Unlocked" xml:space="preserve">
    <value>Mini Unlocked</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Heavy" xml:space="preserve">
    <value>Heavy</value>
  </data>
</root>