// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SL.ChatLinks.Storage;

namespace SL.ChatLinks.Migrations
{
    [DbContext(typeof(ChatLinksContext))]
    [Migration("20250201221800_JadeBots")]
    partial class JadeBots
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChatLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Disciplines")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Flags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MinRating")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OutputItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OutputItemId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("TimeToCraft")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatLink");

                    b.HasIndex("OutputItemId");

                    b.ToTable("Recipes");

                    b.HasDiscriminator<string>("Type").HasValue("recipe");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Dyes.DyeColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseRgb")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cloth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fur")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Leather")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Metal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Set")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Hue");

                    b.HasIndex("ItemId");

                    b.HasIndex("Material");

                    b.HasIndex("Name");

                    b.HasIndex("Set");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Finishers.Finisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IconHref")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LockedText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnlockItemIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Order");

                    b.ToTable("Finishers");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Gliders.GliderSkin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultDyeColorIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IconHref")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnlockItemIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Order");

                    b.ToTable("Gliders");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UnlockItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UnlockItemId");

                    b.ToTable("JadeBots");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Flags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IconHref")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Races")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Skins");

                    b.HasDiscriminator<string>("Type").HasValue("skin");
                });

            modelBuilder.Entity("GuildWars2.Items.Item", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChatLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Flags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameTypes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IconHref")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Restrictions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VendorValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChatLink");

                    b.HasIndex("Name");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Type").HasValue("item");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.AmuletRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("amulet");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.AxeRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("axe");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.BackpackRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("backpack");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.BagRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("bag");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.BootsRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("boots");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.BulkRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("bulk");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.CoatRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("coat");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.ComponentRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("component");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("consumable");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.DaggerRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("dagger");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.DessertRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("dessert");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.DyeRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("dye");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.EarringRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("earring");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.FeastRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("feast");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.FocusRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("focus");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.GlovesRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("gloves");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("greatsword");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.Property<string>("GuildIngredients")
                        .IsRequired()
                        .HasColumnName("GuildConsumableRecipe_GuildIngredients")
                        .HasColumnType("TEXT");

                    b.Property<int>("OutputUpgradeId")
                        .HasColumnName("OutputUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("guild_consumable");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.Property<string>("GuildIngredients")
                        .IsRequired()
                        .HasColumnName("GuildIngredients")
                        .HasColumnType("TEXT");

                    b.Property<int>("OutputUpgradeId")
                        .HasColumnName("OutputUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("guild_decoration");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.Property<int?>("OutputUpgradeId")
                        .HasColumnName("OutputWvwUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("guild_wvw_upgrade");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.HammerRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("hammer");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("harpoon_gun");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("headgear");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("ingredient_cooking");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("inscription");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("insignia");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("legendary_component");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("leggings");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.LongbowRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("longbow");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.MaceRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("mace");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.MealRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("meal");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.PistolRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("pistol");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.PotionRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("potion");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("refinement_ectoplasm");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("refinement_obsidian");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.RefinementRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("refinement");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.RifleRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("rifle");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.RingRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("ring");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.ScepterRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("scepter");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("seasoning");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.ShieldRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("shield");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("shortbow");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("shoulders");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.SnackRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("snack");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.SoupRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("soup");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.SpearRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("spear");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.StaffRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("staff");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.SwordRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("sword");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.TorchRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("torch");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.TridentRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("trident");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("upgrade_component");
                });

            modelBuilder.Entity("GuildWars2.Hero.Crafting.Recipes.WarhornRecipe", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Crafting.Recipes.Recipe");

                    b.HasDiscriminator().HasValue("warhorn");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin");

                    b.Property<string>("DyeSlots")
                        .HasColumnType("TEXT");

                    b.Property<string>("WeightClass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("armor");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin");

                    b.HasDiscriminator().HasValue("back");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin");

                    b.HasDiscriminator().HasValue("gathering_tool");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("weapon");
                });

            modelBuilder.Entity("GuildWars2.Items.Armor", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultSkinId")
                        .HasColumnName("DefaultSkinId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnName("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InfusionSlots")
                        .IsRequired()
                        .HasColumnName("InfusionSlots")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatChoices")
                        .IsRequired()
                        .HasColumnName("StatChoices")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuffixItemId")
                        .HasColumnName("SuffixItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeightClass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("armor");
                });

            modelBuilder.Entity("GuildWars2.Items.Backpack", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultSkinId")
                        .HasColumnName("DefaultSkinId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InfusionSlots")
                        .IsRequired()
                        .HasColumnName("InfusionSlots")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatChoices")
                        .IsRequired()
                        .HasColumnName("StatChoices")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuffixItemId")
                        .HasColumnName("SuffixItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpgradesFrom")
                        .IsRequired()
                        .HasColumnName("UpgradesFrom")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpgradesInto")
                        .IsRequired()
                        .HasColumnName("UpgradesInto")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("back");
                });

            modelBuilder.Entity("GuildWars2.Items.Bag", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<bool>("NoSellOrSort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("bag");
                });

            modelBuilder.Entity("GuildWars2.Items.Consumable", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("consumable");
                });

            modelBuilder.Entity("GuildWars2.Items.Container", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("container");
                });

            modelBuilder.Entity("GuildWars2.Items.CraftingMaterial", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<string>("UpgradesInto")
                        .IsRequired()
                        .HasColumnName("UpgradesInto")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("crafting_material");
                });

            modelBuilder.Entity("GuildWars2.Items.GatheringTool", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("gathering_tool");
                });

            modelBuilder.Entity("GuildWars2.Items.Gizmo", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<int?>("GuildUpgradeId")
                        .HasColumnName("GuildUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("gizmo");
                });

            modelBuilder.Entity("GuildWars2.Items.JadeTechModule", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("jade_tech_module");
                });

            modelBuilder.Entity("GuildWars2.Items.Miniature", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<int>("MiniatureId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("miniature");
                });

            modelBuilder.Entity("GuildWars2.Items.PowerCore", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("power_core");
                });

            modelBuilder.Entity("GuildWars2.Items.Relic", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("relic");
                });

            modelBuilder.Entity("GuildWars2.Items.SalvageTool", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<int>("Charges")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("salvage_tool");
                });

            modelBuilder.Entity("GuildWars2.Items.Trinket", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<string>("InfusionSlots")
                        .IsRequired()
                        .HasColumnName("InfusionSlots")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatChoices")
                        .IsRequired()
                        .HasColumnName("StatChoices")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuffixItemId")
                        .HasColumnName("SuffixItemId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("trinket");
                });

            modelBuilder.Entity("GuildWars2.Items.Trophy", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("trophy");
                });

            modelBuilder.Entity("GuildWars2.Items.UpgradeComponent", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<string>("InfusionUpgradeFlags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SuffixName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpgradeComponentFlags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("upgrade_component");
                });

            modelBuilder.Entity("GuildWars2.Items.Weapon", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultSkinId")
                        .HasColumnName("DefaultSkinId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnName("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InfusionSlots")
                        .IsRequired()
                        .HasColumnName("InfusionSlots")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxPower")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinPower")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SecondarySuffixItemId")
                        .HasColumnName("SecondarySuffixItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatChoices")
                        .IsRequired()
                        .HasColumnName("StatChoices")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuffixItemId")
                        .HasColumnName("SuffixItemId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("weapon");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.BootsSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin");

                    b.HasDiscriminator().HasValue("boots");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.CoatSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin");

                    b.HasDiscriminator().HasValue("coat");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin");

                    b.HasDiscriminator().HasValue("gloves");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin");

                    b.HasDiscriminator().HasValue("helm_aquatic");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.HelmSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin");

                    b.HasDiscriminator().HasValue("helm");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin");

                    b.HasDiscriminator().HasValue("leggings");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin");

                    b.HasDiscriminator().HasValue("shoulders");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin");

                    b.HasDiscriminator().HasValue("fishing_tool");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin");

                    b.HasDiscriminator().HasValue("foraging_tool");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin");

                    b.HasDiscriminator().HasValue("logging_tool");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin");

                    b.HasDiscriminator().HasValue("mining_tool");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.AxeSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("axe");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("dagger");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.FocusSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("focus");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("greatsword");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.HammerSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("hammer");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("harpoon_gun");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("large_bundle");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("longbow");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.MaceSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("mace");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.PistolSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("pistol");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.RifleSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("rifle");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("scepter");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("shield");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("shortbow");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("small_bundle");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.SpearSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("spear");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.StaffSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("staff");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.SwordSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("sword");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.TorchSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("torch");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.ToySkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("toy");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("toy_two_handed");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.TridentSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("trident");
                });

            modelBuilder.Entity("GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin", b =>
                {
                    b.HasBaseType("GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin");

                    b.HasDiscriminator().HasValue("warhorn");
                });

            modelBuilder.Entity("GuildWars2.Items.Boots", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("boots");
                });

            modelBuilder.Entity("GuildWars2.Items.Coat", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("coat");
                });

            modelBuilder.Entity("GuildWars2.Items.Gloves", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("gloves");
                });

            modelBuilder.Entity("GuildWars2.Items.Helm", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("helm");
                });

            modelBuilder.Entity("GuildWars2.Items.HelmAquatic", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("helm_aquatic");
                });

            modelBuilder.Entity("GuildWars2.Items.Leggings", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("leggings");
                });

            modelBuilder.Entity("GuildWars2.Items.Shoulders", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("shoulders");
                });

            modelBuilder.Entity("GuildWars2.Items.AppearanceChanger", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("appearance_changer");
                });

            modelBuilder.Entity("GuildWars2.Items.Booze", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("booze");
                });

            modelBuilder.Entity("GuildWars2.Items.ContractNpc", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("contract_npc");
                });

            modelBuilder.Entity("GuildWars2.Items.Currency", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("currency");
                });

            modelBuilder.Entity("GuildWars2.Items.Food", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("Effect")
                        .HasColumnName("Effect")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("food");
                });

            modelBuilder.Entity("GuildWars2.Items.GenericConsumable", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("Effect")
                        .HasColumnName("Effect")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GuildUpgradeId")
                        .HasColumnName("GuildUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("generic_consumable");
                });

            modelBuilder.Entity("GuildWars2.Items.HalloweenConsumable", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("halloween_consumable");
                });

            modelBuilder.Entity("GuildWars2.Items.MountLicense", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("mount_license");
                });

            modelBuilder.Entity("GuildWars2.Items.RandomUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("random_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.Service", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("Effect")
                        .HasColumnName("Effect")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GuildUpgradeId")
                        .HasColumnName("GuildUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("service");
                });

            modelBuilder.Entity("GuildWars2.Items.TeleportToFriend", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("teleport_to_friend");
                });

            modelBuilder.Entity("GuildWars2.Items.Transmutation", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("SkinIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("transmutation");
                });

            modelBuilder.Entity("GuildWars2.Items.Unlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.UpgradeExtractor", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("upgrade_extractor");
                });

            modelBuilder.Entity("GuildWars2.Items.Utility", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("Effect")
                        .HasColumnName("Effect")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("utility");
                });

            modelBuilder.Entity("GuildWars2.Items.BlackLionChest", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Container");

                    b.HasDiscriminator().HasValue("black_lion_chest");
                });

            modelBuilder.Entity("GuildWars2.Items.GiftBox", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Container");

                    b.HasDiscriminator().HasValue("gift_box");
                });

            modelBuilder.Entity("GuildWars2.Items.ImmediateContainer", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Container");

                    b.HasDiscriminator().HasValue("immediate_container");
                });

            modelBuilder.Entity("GuildWars2.Items.Bait", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("bait");
                });

            modelBuilder.Entity("GuildWars2.Items.HarvestingSickle", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("harvesting_sickle");
                });

            modelBuilder.Entity("GuildWars2.Items.LoggingAxe", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("logging_axe");
                });

            modelBuilder.Entity("GuildWars2.Items.Lure", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("lure");
                });

            modelBuilder.Entity("GuildWars2.Items.MiningPick", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("mining_pick");
                });

            modelBuilder.Entity("GuildWars2.Items.BlackLionChestKey", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Gizmo");

                    b.HasDiscriminator().HasValue("black_lion_chest_key");
                });

            modelBuilder.Entity("GuildWars2.Items.RentableContractNpc", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Gizmo");

                    b.HasDiscriminator().HasValue("rentable_contract_npc");
                });

            modelBuilder.Entity("GuildWars2.Items.UnlimitedConsumable", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Gizmo");

                    b.HasDiscriminator().HasValue("unlimited_consumable");
                });

            modelBuilder.Entity("GuildWars2.Items.Accessory", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Trinket");

                    b.HasDiscriminator().HasValue("accessory");
                });

            modelBuilder.Entity("GuildWars2.Items.Amulet", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Trinket");

                    b.HasDiscriminator().HasValue("amulet");
                });

            modelBuilder.Entity("GuildWars2.Items.Ring", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Trinket");

                    b.Property<string>("UpgradesFrom")
                        .IsRequired()
                        .HasColumnName("UpgradesFrom")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpgradesInto")
                        .IsRequired()
                        .HasColumnName("UpgradesInto")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("ring");
                });

            modelBuilder.Entity("GuildWars2.Items.Gem", b =>
                {
                    b.HasBaseType("GuildWars2.Items.UpgradeComponent");

                    b.HasDiscriminator().HasValue("gem");
                });

            modelBuilder.Entity("GuildWars2.Items.Rune", b =>
                {
                    b.HasBaseType("GuildWars2.Items.UpgradeComponent");

                    b.Property<string>("Bonuses")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("rune");
                });

            modelBuilder.Entity("GuildWars2.Items.Sigil", b =>
                {
                    b.HasBaseType("GuildWars2.Items.UpgradeComponent");

                    b.HasDiscriminator().HasValue("sigil");
                });

            modelBuilder.Entity("GuildWars2.Items.Axe", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("axe");
                });

            modelBuilder.Entity("GuildWars2.Items.Dagger", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("dagger");
                });

            modelBuilder.Entity("GuildWars2.Items.Focus", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("focus");
                });

            modelBuilder.Entity("GuildWars2.Items.Greatsword", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("greatsword");
                });

            modelBuilder.Entity("GuildWars2.Items.Hammer", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("hammer");
                });

            modelBuilder.Entity("GuildWars2.Items.HarpoonGun", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("harpoon_gun");
                });

            modelBuilder.Entity("GuildWars2.Items.LargeBundle", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("large_bundle");
                });

            modelBuilder.Entity("GuildWars2.Items.Longbow", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("longbow");
                });

            modelBuilder.Entity("GuildWars2.Items.Mace", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("mace");
                });

            modelBuilder.Entity("GuildWars2.Items.Pistol", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("pistol");
                });

            modelBuilder.Entity("GuildWars2.Items.Rifle", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("rifle");
                });

            modelBuilder.Entity("GuildWars2.Items.Scepter", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("scepter");
                });

            modelBuilder.Entity("GuildWars2.Items.Shield", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("shield");
                });

            modelBuilder.Entity("GuildWars2.Items.Shortbow", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("shortbow");
                });

            modelBuilder.Entity("GuildWars2.Items.SmallBundle", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("small_bundle");
                });

            modelBuilder.Entity("GuildWars2.Items.Spear", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("spear");
                });

            modelBuilder.Entity("GuildWars2.Items.Staff", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("staff");
                });

            modelBuilder.Entity("GuildWars2.Items.Sword", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("sword");
                });

            modelBuilder.Entity("GuildWars2.Items.Torch", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("torch");
                });

            modelBuilder.Entity("GuildWars2.Items.Toy", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("toy");
                });

            modelBuilder.Entity("GuildWars2.Items.ToyTwoHanded", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("toy_two_handed");
                });

            modelBuilder.Entity("GuildWars2.Items.Trident", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("trident");
                });

            modelBuilder.Entity("GuildWars2.Items.Warhorn", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("warhorn");
                });

            modelBuilder.Entity("GuildWars2.Items.BagSlotExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("bag_slot_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.BankTabExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("bank_tab_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.BuildStorageExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("build_storage_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.BuildTemplateExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("build_template_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.ContentUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("content_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.Dye", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.Property<int>("ColorId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("dye");
                });

            modelBuilder.Entity("GuildWars2.Items.EquipmentTemplateExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("equipment_template_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.GliderSkinUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("glider_skin_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.JadeBotSkinUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("jade_bot_skin_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.MiniatureUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("miniature_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.MistChampionSkinUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("mist_champion_skin_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.MountSkinUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("mount_skin_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.OutfitUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("outfit_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.RecipeSheet", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.Property<string>("ExtraRecipeIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("recipe_sheet");
                });

            modelBuilder.Entity("GuildWars2.Items.SharedInventorySlot", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("shared_inventory_slot");
                });

            modelBuilder.Entity("GuildWars2.Items.StorageExpander", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("storage_expander");
                });
#pragma warning restore 612, 618
        }
    }
}
