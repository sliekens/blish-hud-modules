// <auto-generated />
using System;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

using SL.ChatLinks.Storage;

namespace SL.ChatLinks.Migrations
{
    [DbContext(typeof(ChatLinksContext))]
    [Migration("20241201130613_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("GuildWars2.Items.Item", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChatLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Flags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameTypes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IconHref")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Restrictions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VendorValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Type").HasValue("item");
                });

            modelBuilder.Entity("GuildWars2.Items.Armor", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultSkinId")
                        .HasColumnName("DefaultSkinId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnName("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InfusionSlots")
                        .IsRequired()
                        .HasColumnName("InfusionSlots")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatChoices")
                        .IsRequired()
                        .HasColumnName("StatChoices")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuffixItemId")
                        .HasColumnName("SuffixItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeightClass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("armor");
                });

            modelBuilder.Entity("GuildWars2.Items.Backpack", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultSkinId")
                        .HasColumnName("DefaultSkinId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InfusionSlots")
                        .IsRequired()
                        .HasColumnName("InfusionSlots")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatChoices")
                        .IsRequired()
                        .HasColumnName("StatChoices")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuffixItemId")
                        .HasColumnName("SuffixItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpgradesFrom")
                        .IsRequired()
                        .HasColumnName("UpgradesFrom")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpgradesInto")
                        .IsRequired()
                        .HasColumnName("UpgradesInto")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("back");
                });

            modelBuilder.Entity("GuildWars2.Items.Bag", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<bool>("NoSellOrSort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("bag");
                });

            modelBuilder.Entity("GuildWars2.Items.Consumable", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("consumable");
                });

            modelBuilder.Entity("GuildWars2.Items.Container", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("container");
                });

            modelBuilder.Entity("GuildWars2.Items.CraftingMaterial", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<string>("UpgradesInto")
                        .IsRequired()
                        .HasColumnName("UpgradesInto")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("crafting_material");
                });

            modelBuilder.Entity("GuildWars2.Items.GatheringTool", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("gathering_tool");
                });

            modelBuilder.Entity("GuildWars2.Items.Gizmo", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<int?>("GuildUpgradeId")
                        .HasColumnName("GuildUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("gizmo");
                });

            modelBuilder.Entity("GuildWars2.Items.JadeTechModule", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("jade_tech_module");
                });

            modelBuilder.Entity("GuildWars2.Items.Miniature", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<int>("MiniatureId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("miniature");
                });

            modelBuilder.Entity("GuildWars2.Items.PowerCore", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("power_core");
                });

            modelBuilder.Entity("GuildWars2.Items.Relic", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("relic");
                });

            modelBuilder.Entity("GuildWars2.Items.SalvageTool", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<int>("Charges")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("salvage_tool");
                });

            modelBuilder.Entity("GuildWars2.Items.Trinket", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<string>("InfusionSlots")
                        .IsRequired()
                        .HasColumnName("InfusionSlots")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatChoices")
                        .IsRequired()
                        .HasColumnName("StatChoices")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuffixItemId")
                        .HasColumnName("SuffixItemId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("trinket");
                });

            modelBuilder.Entity("GuildWars2.Items.Trophy", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.HasDiscriminator().HasValue("trophy");
                });

            modelBuilder.Entity("GuildWars2.Items.UpgradeComponent", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<string>("InfusionUpgradeFlags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SuffixName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpgradeComponentFlags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("upgrade_component");
                });

            modelBuilder.Entity("GuildWars2.Items.Weapon", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Item");

                    b.Property<double>("AttributeAdjustment")
                        .HasColumnName("AttributeAdjustment")
                        .HasColumnType("REAL");

                    b.Property<int?>("AttributeCombinationId")
                        .HasColumnName("AttributeCombinationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnName("Attributes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Buff")
                        .HasColumnName("Buff")
                        .HasColumnType("TEXT");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultSkinId")
                        .HasColumnName("DefaultSkinId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnName("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InfusionSlots")
                        .IsRequired()
                        .HasColumnName("InfusionSlots")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxPower")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinPower")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SecondarySuffixItemId")
                        .HasColumnName("SecondarySuffixItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatChoices")
                        .IsRequired()
                        .HasColumnName("StatChoices")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuffixItemId")
                        .HasColumnName("SuffixItemId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("weapon");
                });

            modelBuilder.Entity("GuildWars2.Items.Boots", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("boots");
                });

            modelBuilder.Entity("GuildWars2.Items.Coat", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("coat");
                });

            modelBuilder.Entity("GuildWars2.Items.Gloves", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("gloves");
                });

            modelBuilder.Entity("GuildWars2.Items.Helm", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("helm");
                });

            modelBuilder.Entity("GuildWars2.Items.HelmAquatic", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("helm_aquatic");
                });

            modelBuilder.Entity("GuildWars2.Items.Leggings", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("leggings");
                });

            modelBuilder.Entity("GuildWars2.Items.Shoulders", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Armor");

                    b.HasDiscriminator().HasValue("shoulders");
                });

            modelBuilder.Entity("GuildWars2.Items.AppearanceChanger", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("appearance_changer");
                });

            modelBuilder.Entity("GuildWars2.Items.Booze", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("booze");
                });

            modelBuilder.Entity("GuildWars2.Items.ContractNpc", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("contract_npc");
                });

            modelBuilder.Entity("GuildWars2.Items.Currency", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("currency");
                });

            modelBuilder.Entity("GuildWars2.Items.Food", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("Effect")
                        .HasColumnName("Effect")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("food");
                });

            modelBuilder.Entity("GuildWars2.Items.GenericConsumable", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("Effect")
                        .HasColumnName("Effect")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GuildUpgradeId")
                        .HasColumnName("GuildUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("generic_consumable");
                });

            modelBuilder.Entity("GuildWars2.Items.HalloweenConsumable", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("halloween_consumable");
                });

            modelBuilder.Entity("GuildWars2.Items.MountLicense", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("mount_license");
                });

            modelBuilder.Entity("GuildWars2.Items.RandomUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("random_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.Service", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("Effect")
                        .HasColumnName("Effect")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GuildUpgradeId")
                        .HasColumnName("GuildUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("service");
                });

            modelBuilder.Entity("GuildWars2.Items.TeleportToFriend", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("teleport_to_friend");
                });

            modelBuilder.Entity("GuildWars2.Items.Transmutation", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("SkinIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("transmutation");
                });

            modelBuilder.Entity("GuildWars2.Items.Unlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.UpgradeExtractor", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.HasDiscriminator().HasValue("upgrade_extractor");
                });

            modelBuilder.Entity("GuildWars2.Items.Utility", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Consumable");

                    b.Property<string>("Effect")
                        .HasColumnName("Effect")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("utility");
                });

            modelBuilder.Entity("GuildWars2.Items.BlackLionChest", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Container");

                    b.HasDiscriminator().HasValue("black_lion_chest");
                });

            modelBuilder.Entity("GuildWars2.Items.GiftBox", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Container");

                    b.HasDiscriminator().HasValue("gift_box");
                });

            modelBuilder.Entity("GuildWars2.Items.ImmediateContainer", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Container");

                    b.HasDiscriminator().HasValue("immediate_container");
                });

            modelBuilder.Entity("GuildWars2.Items.Bait", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("bait");
                });

            modelBuilder.Entity("GuildWars2.Items.HarvestingSickle", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("harvesting_sickle");
                });

            modelBuilder.Entity("GuildWars2.Items.LoggingAxe", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("logging_axe");
                });

            modelBuilder.Entity("GuildWars2.Items.Lure", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("lure");
                });

            modelBuilder.Entity("GuildWars2.Items.MiningPick", b =>
                {
                    b.HasBaseType("GuildWars2.Items.GatheringTool");

                    b.HasDiscriminator().HasValue("mining_pick");
                });

            modelBuilder.Entity("GuildWars2.Items.BlackLionChestKey", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Gizmo");

                    b.HasDiscriminator().HasValue("black_lion_chest_key");
                });

            modelBuilder.Entity("GuildWars2.Items.RentableContractNpc", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Gizmo");

                    b.HasDiscriminator().HasValue("rentable_contract_npc");
                });

            modelBuilder.Entity("GuildWars2.Items.UnlimitedConsumable", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Gizmo");

                    b.HasDiscriminator().HasValue("unlimited_consumable");
                });

            modelBuilder.Entity("GuildWars2.Items.Accessory", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Trinket");

                    b.HasDiscriminator().HasValue("accessory");
                });

            modelBuilder.Entity("GuildWars2.Items.Amulet", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Trinket");

                    b.HasDiscriminator().HasValue("amulet");
                });

            modelBuilder.Entity("GuildWars2.Items.Ring", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Trinket");

                    b.Property<string>("UpgradesFrom")
                        .IsRequired()
                        .HasColumnName("UpgradesFrom")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpgradesInto")
                        .IsRequired()
                        .HasColumnName("UpgradesInto")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("ring");
                });

            modelBuilder.Entity("GuildWars2.Items.Gem", b =>
                {
                    b.HasBaseType("GuildWars2.Items.UpgradeComponent");

                    b.HasDiscriminator().HasValue("gem");
                });

            modelBuilder.Entity("GuildWars2.Items.Rune", b =>
                {
                    b.HasBaseType("GuildWars2.Items.UpgradeComponent");

                    b.Property<string>("Bonuses")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("rune");
                });

            modelBuilder.Entity("GuildWars2.Items.Sigil", b =>
                {
                    b.HasBaseType("GuildWars2.Items.UpgradeComponent");

                    b.HasDiscriminator().HasValue("sigil");
                });

            modelBuilder.Entity("GuildWars2.Items.Axe", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("axe");
                });

            modelBuilder.Entity("GuildWars2.Items.Dagger", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("dagger");
                });

            modelBuilder.Entity("GuildWars2.Items.Focus", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("focus");
                });

            modelBuilder.Entity("GuildWars2.Items.Greatsword", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("greatsword");
                });

            modelBuilder.Entity("GuildWars2.Items.Hammer", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("hammer");
                });

            modelBuilder.Entity("GuildWars2.Items.HarpoonGun", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("harpoon_gun");
                });

            modelBuilder.Entity("GuildWars2.Items.LargeBundle", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("large_bundle");
                });

            modelBuilder.Entity("GuildWars2.Items.Longbow", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("longbow");
                });

            modelBuilder.Entity("GuildWars2.Items.Mace", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("mace");
                });

            modelBuilder.Entity("GuildWars2.Items.Pistol", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("pistol");
                });

            modelBuilder.Entity("GuildWars2.Items.Rifle", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("rifle");
                });

            modelBuilder.Entity("GuildWars2.Items.Scepter", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("scepter");
                });

            modelBuilder.Entity("GuildWars2.Items.Shield", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("shield");
                });

            modelBuilder.Entity("GuildWars2.Items.Shortbow", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("shortbow");
                });

            modelBuilder.Entity("GuildWars2.Items.SmallBundle", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("small_bundle");
                });

            modelBuilder.Entity("GuildWars2.Items.Spear", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("spear");
                });

            modelBuilder.Entity("GuildWars2.Items.Staff", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("staff");
                });

            modelBuilder.Entity("GuildWars2.Items.Sword", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("sword");
                });

            modelBuilder.Entity("GuildWars2.Items.Torch", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("torch");
                });

            modelBuilder.Entity("GuildWars2.Items.Toy", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("toy");
                });

            modelBuilder.Entity("GuildWars2.Items.ToyTwoHanded", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("toy_two_handed");
                });

            modelBuilder.Entity("GuildWars2.Items.Trident", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("trident");
                });

            modelBuilder.Entity("GuildWars2.Items.Warhorn", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Weapon");

                    b.HasDiscriminator().HasValue("warhorn");
                });

            modelBuilder.Entity("GuildWars2.Items.BagSlotExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("bag_slot_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.BankTabExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("bank_tab_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.BuildStorageExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("build_storage_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.BuildTemplateExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("build_template_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.ContentUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("content_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.Dye", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.Property<int>("ColorId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("dye");
                });

            modelBuilder.Entity("GuildWars2.Items.EquipmentTemplateExpansion", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("equipment_template_expansion");
                });

            modelBuilder.Entity("GuildWars2.Items.GliderSkinUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("glider_skin_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.JadeBotSkinUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("jade_bot_skin_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.MiniatureUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("miniature_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.MistChampionSkinUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("mist_champion_skin_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.MountSkinUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("mount_skin_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.OutfitUnlocker", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("outfit_unlocker");
                });

            modelBuilder.Entity("GuildWars2.Items.RecipeSheet", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.Property<string>("ExtraRecipeIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("recipe_sheet");
                });

            modelBuilder.Entity("GuildWars2.Items.SharedInventorySlot", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("shared_inventory_slot");
                });

            modelBuilder.Entity("GuildWars2.Items.StorageExpander", b =>
                {
                    b.HasBaseType("GuildWars2.Items.Unlocker");

                    b.HasDiscriminator().HasValue("storage_expander");
                });
#pragma warning restore 612, 618
        }
    }
}
